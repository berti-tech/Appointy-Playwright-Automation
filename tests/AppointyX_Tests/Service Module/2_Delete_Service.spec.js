// Delete an existing service
require('dotenv').config();
const {test, expect } = require('@playwright/test')
const {LoginPageObject, ServiceObject} = require("../../../pageObjects/pageObjects").default

const url = "https://admin.appointy.com/account/login" 
const mySpaceURL = "https://admin.appointy.com/my-space"
const srvURL = "https://admin.appointy.com/settings/appointment-settings/services"
let email = process.env.EMAIL; 
let password = process.env.PASSWORD; 



// Create a Service and Delete the same service
test('Delete an existing service', async({page})=>{

    let srvObj = new ServiceObject(page);
    let lgnPgObj = new LoginPageObject(page);
    await page.goto(url)
    await lgnPgObj.email_locator.fill(email);
    await lgnPgObj.password_locator.fill(password);
    await lgnPgObj.btn_locator.click();

    await page.waitForURL(mySpaceURL);
    await srvObj.settingBtn.click();

    // First create a new service - Eg- TestDeleteService
    await srvObj.serviceBtn.click();

    await srvObj.addNewServiceBtn.click();

    // Create a new Service
    await srvObj.createNewService.click();

    // Create a one-one Service 
    await srvObj.oneToOneSrvBtn.click();

    // Create the service In-Location
    await srvObj.inLocationBtn.click();
    
    await srvObj.srvTitleTextBox.fill("0_Playwright - Delete Service");
    
    // Set Duration
    await srvObj.srvDuratnBox.fill("60");
    
    // Set Price
    await srvObj.setPriceBtn.click();
    await srvObj.priceTextBox.fill("3000");

    // Click Next Button
    await srvObj.nxtBtn.click();

    if(page.getByText('service title already exists in location').isVisible()){
        // Click on Close Button
        await page.getByRole('button', { name: 'Close' }).click();
    }
    else {
        // Select the staff who will perform this service
        await srvObj.assignToAllBtn.click();
        // Click Next Button
        await srvObj.nxtBtn.click();
    }
    

    // Click on Service Module
    await srvObj.serviceBtn.click();

    // Search the recently created service - using search bar
    const srv = page.getByPlaceholder('Type to search...')
    await srv.click();
    await srv.fill("0_")
    const srv_search = page.getByRole('option', { name: 'Service Name matches "0_"' })
    await srv_search.click();
    const srv_found = page.getByRole('cell', { name: '0_Playwright - Delete Service' });
    await srv_found.click();


    // Select any random service other than a particular service
    // 1. Generate a random number using Math.random()
    // 2. Create a variable for storing the particular service which you don't want to delete
    // 3. If the generated number is equal to the index of the element that you don't want to delete, then skip it.
    // 4. Delete the element at the index generated by random function.

    // Select the service locator which you want to delete
    // let arr = page.getByRole('rowgroup').allTextContents()
    // console.log(await arr)
    // await page.getByRole('cell', { name: 'Playwright Service', exact: true }).click()
    
    // // Click on Delete button
    await srvObj.deleteBtn.click()

    // // Select the locator to delete the service
    await page.getByRole('radio',{name: 'Do not delete any appointments related to this Service', exact: true}).click()


    await srvObj.confirmBtn.click()

    // Click on Service Module
    await srvObj.serviceBtn.click();

    await page.locator('ol').getByText('Settings');

    // Search the recently deleted service in the search box 

    // locator('ol').getByText('Settings')
    // getByRole('heading', { name: 'No services match the search criterion' })


    await expect(page.getByText('Service deleted successfully')).toHaveText('Service deleted successfully')
    expect(page.getByRole('cell', {name: '0_Playwright - Delete Service'}).isVisible()).toBeFalsy();

})
